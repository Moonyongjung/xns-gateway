// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/controller/balance": {
            "get": {
                "description": "Get balance of the controller contract",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Controller"
                ],
                "summary": "Balance of the controller",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.QueryResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/service.QueryResponse"
                        }
                    }
                }
            }
        },
        "/controller/commitment/{label}/{domain-owner}/{secret}": {
            "get": {
                "description": "Generate commitment by querying",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Controller"
                ],
                "summary": "Generate commitment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "domain name for register",
                        "name": "label",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "domain owner address",
                        "name": "domain-owner",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "secret words",
                        "name": "secret",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.QueryResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/service.QueryResponse"
                        }
                    }
                }
            }
        },
        "/controller/config": {
            "get": {
                "description": "Get the configuration of the controller contract",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Controller"
                ],
                "summary": "Config of the controller",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.QueryResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/service.QueryResponse"
                        }
                    }
                }
            }
        },
        "/controller/register-cost/{label}/{duration}": {
            "get": {
                "description": "Calculate cost to register domain",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Controller"
                ],
                "summary": "Calculate cost amount",
                "parameters": [
                    {
                        "type": "string",
                        "description": "domain name for register",
                        "name": "label",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "expire duration",
                        "name": "duration",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.QueryResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/service.QueryResponse"
                        }
                    }
                }
            }
        },
        "/controller/top-domain": {
            "get": {
                "description": "Get top domain of the controller",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Controller"
                ],
                "summary": "Get top domain",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.QueryResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/service.QueryResponse"
                        }
                    }
                }
            }
        },
        "/nft-registrar/account-by-domain/{label}/{top_domain}": {
            "get": {
                "description": "Get account address that has the retrieved domain",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT-Registrar"
                ],
                "summary": "Retrieve the account address by the domain",
                "parameters": [
                    {
                        "type": "string",
                        "description": "domain name to retrieve",
                        "name": "label",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "top level domain",
                        "name": "top_domain",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.QueryResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/service.QueryResponse"
                        }
                    }
                }
            }
        },
        "/nft-registrar/all-nft-info/{token-id}": {
            "get": {
                "description": "Get the all NFT info by retrieving the token ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT-Registrar"
                ],
                "summary": "All NFT info of the token ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the NFT token ID",
                        "name": "token-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.QueryResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/service.QueryResponse"
                        }
                    }
                }
            }
        },
        "/nft-registrar/all-operators/{owner}": {
            "get": {
                "description": "Get operators info of the owner",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT-Registrar"
                ],
                "summary": "Operators info of the owner",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the owner owns NFT",
                        "name": "owner",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.QueryResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/service.QueryResponse"
                        }
                    }
                }
            }
        },
        "/nft-registrar/all-tokens": {
            "get": {
                "description": "Get all tokens in the NFT registrar contract",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT-Registrar"
                ],
                "summary": "All tokens in the contract",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.QueryResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/service.QueryResponse"
                        }
                    }
                }
            }
        },
        "/nft-registrar/approval/{token-id}/{spender}": {
            "get": {
                "description": "Get approval of the token ID with the spender",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT-Registrar"
                ],
                "summary": "Approval of the token ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the NFT token ID",
                        "name": "token-id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the spender of the token ID",
                        "name": "spender",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.QueryResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/service.QueryResponse"
                        }
                    }
                }
            }
        },
        "/nft-registrar/approvals/{token-id}": {
            "get": {
                "description": "Get approvals of the token ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT-Registrar"
                ],
                "summary": "Approvals of the token ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the owner owns NFT",
                        "name": "token-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.QueryResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/service.QueryResponse"
                        }
                    }
                }
            }
        },
        "/nft-registrar/contract-info": {
            "get": {
                "description": "Get the NFT registrar contract info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT-Registrar"
                ],
                "summary": "Get the contract info",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.QueryResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/service.QueryResponse"
                        }
                    }
                }
            }
        },
        "/nft-registrar/domain-by-account/{account}": {
            "get": {
                "description": "Get domain by retrieving account address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT-Registrar"
                ],
                "summary": "Retrieve the domain by the account address",
                "parameters": [
                    {
                        "type": "string",
                        "description": "account address to retrieve",
                        "name": "account",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.QueryResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/service.QueryResponse"
                        }
                    }
                }
            }
        },
        "/nft-registrar/domain-history-by-account/{account}": {
            "get": {
                "description": "Get domain history by retrieving account address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT-Registrar"
                ],
                "summary": "Retrieve the domain historyby the account address",
                "parameters": [
                    {
                        "type": "string",
                        "description": "account address to retrieve",
                        "name": "account",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.QueryResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/service.QueryResponse"
                        }
                    }
                }
            }
        },
        "/nft-registrar/expired-latest-domain/{label}/{top_domain}": {
            "get": {
                "description": "Get domain info with expiration and the account who has the domain lastly",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT-Registrar"
                ],
                "summary": "Get domain info with expiration",
                "parameters": [
                    {
                        "type": "string",
                        "description": "domain name to retrieve",
                        "name": "label",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "top level domain",
                        "name": "top_domain",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.QueryResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/service.QueryResponse"
                        }
                    }
                }
            }
        },
        "/nft-registrar/hash/{input}": {
            "get": {
                "description": "Get hash result for an input",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT-Registrar"
                ],
                "summary": "Get hash result",
                "parameters": [
                    {
                        "type": "string",
                        "description": "any input",
                        "name": "input",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.QueryResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/service.QueryResponse"
                        }
                    }
                }
            }
        },
        "/nft-registrar/minter": {
            "get": {
                "description": "The Minter of the NFT registrar contract",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT-Registrar"
                ],
                "summary": "Minter of the contract",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.QueryResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/service.QueryResponse"
                        }
                    }
                }
            }
        },
        "/nft-registrar/nft-info/{token-id}": {
            "get": {
                "description": "Get the NFT info by retrieving the token ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT-Registrar"
                ],
                "summary": "NFT info of the token ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the NFT token ID",
                        "name": "token-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.QueryResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/service.QueryResponse"
                        }
                    }
                }
            }
        },
        "/nft-registrar/num-tokens": {
            "get": {
                "description": "Get the number of the all tokens in the NFT registrar contract",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT-Registrar"
                ],
                "summary": "The number of the all tokens",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.QueryResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/service.QueryResponse"
                        }
                    }
                }
            }
        },
        "/nft-registrar/owner-of/{token-id}": {
            "get": {
                "description": "Get the owner info of the NFT by retrieving the token ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT-Registrar"
                ],
                "summary": "the owner info of the NFT",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the NFT token ID",
                        "name": "token-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.QueryResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/service.QueryResponse"
                        }
                    }
                }
            }
        },
        "/nft-registrar/registrar": {
            "get": {
                "description": "Get connected address of the registrar contract",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT-Registrar"
                ],
                "summary": "Get registrar",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.QueryResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/service.QueryResponse"
                        }
                    }
                }
            }
        },
        "/nft-registrar/resolver": {
            "get": {
                "description": "Get connected address of the resolver contract",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT-Registrar"
                ],
                "summary": "Get resolver",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.QueryResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/service.QueryResponse"
                        }
                    }
                }
            }
        },
        "/nft-registrar/subdomain/{subdomain_label}/{label}/{top_domain}": {
            "get": {
                "description": "Get subdomain mapped data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT-Registrar"
                ],
                "summary": "Get subdomain data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "subdomain label",
                        "name": "subdomain_label",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "domain name to retrieve",
                        "name": "label",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "top level domain",
                        "name": "top_domain",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.QueryResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/service.QueryResponse"
                        }
                    }
                }
            }
        },
        "/nft-registrar/subdomains/{label}/{top_domain}": {
            "get": {
                "description": "Get subdomains list of the domain",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT-Registrar"
                ],
                "summary": "Get subdomains",
                "parameters": [
                    {
                        "type": "string",
                        "description": "domain name to retrieve",
                        "name": "label",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "top level domain",
                        "name": "top_domain",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.QueryResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/service.QueryResponse"
                        }
                    }
                }
            }
        },
        "/nft-registrar/tokenid-by-domain/{label}/{top_domain}": {
            "get": {
                "description": "Get token ID by domain",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT-Registrar"
                ],
                "summary": "Get token ID by domain",
                "parameters": [
                    {
                        "type": "string",
                        "description": "domain name to retrieve",
                        "name": "label",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "top level domain",
                        "name": "top_domain",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.QueryResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/service.QueryResponse"
                        }
                    }
                }
            }
        },
        "/nft-registrar/tokens/{owner}": {
            "get": {
                "description": "Get tokens that the owner has",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT-Registrar"
                ],
                "summary": "Tokens that the owner has",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the owner owns NFT",
                        "name": "owner",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.QueryResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/service.QueryResponse"
                        }
                    }
                }
            }
        },
        "/registrar/config": {
            "get": {
                "description": "Get configuration of the registrar contract",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Registrar"
                ],
                "summary": "Config of the contract",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.QueryResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/service.QueryResponse"
                        }
                    }
                }
            }
        },
        "/registrar/controllers": {
            "get": {
                "description": "Get linked controller contracts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Registrar"
                ],
                "summary": "linked controllers",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.QueryResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/service.QueryResponse"
                        }
                    }
                }
            }
        },
        "/registrar/nft-registrar": {
            "get": {
                "description": "Get linked the NFT registrar contract",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Registrar"
                ],
                "summary": "linked NFT registrar",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.QueryResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/service.QueryResponse"
                        }
                    }
                }
            }
        },
        "/resolver/account-free-domain-state/{account}": {
            "get": {
                "description": "Get XNS state for the free domain of the account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Resolver"
                ],
                "summary": "XNS state for the free domain of the account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "account address",
                        "name": "account",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.QueryResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/service.QueryResponse"
                        }
                    }
                }
            }
        },
        "/resolver/account-state/{account}": {
            "get": {
                "description": "Get XNS state for the account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Resolver"
                ],
                "summary": "XNS state for the account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "account address",
                        "name": "account",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.QueryResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/service.QueryResponse"
                        }
                    }
                }
            }
        },
        "/resolver/config": {
            "get": {
                "description": "Get configuration of the resolver contract",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Resolver"
                ],
                "summary": "Config of the contract",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.QueryResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/service.QueryResponse"
                        }
                    }
                }
            }
        },
        "/resolver/domain-state/{hashed_label}/{top_domain}": {
            "get": {
                "description": "Get XNS state for the domain",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Resolver"
                ],
                "summary": "XNS state for the domain",
                "parameters": [
                    {
                        "type": "string",
                        "description": "hashed label",
                        "name": "hashed_label",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "top level domain",
                        "name": "top_domain",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.QueryResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/service.QueryResponse"
                        }
                    }
                }
            }
        },
        "/resolver/subdomain/{hashed_label}/{hashed_subdomain_label}": {
            "get": {
                "description": "Get XNS state for a subdomain",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Resolver"
                ],
                "summary": "XNS state for a subdomain",
                "parameters": [
                    {
                        "type": "string",
                        "description": "hashed label",
                        "name": "hashed_label",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "hashed subdomain label",
                        "name": "hashed_subdomain_label",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.QueryResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/service.QueryResponse"
                        }
                    }
                }
            }
        },
        "/xns-contracts-info": {
            "get": {
                "description": "Get XNS contracts info of the XNS gateway",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "XNS-gateway"
                ],
                "summary": "XNS contracts info",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.QueryResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/service.QueryResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "service.QueryResponse": {
            "type": "object",
            "properties": {
                "data": {}
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "0.0.1",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "XNS gateway",
	Description:      "XNS(XPLA Name Service) gateway provides chain naming service for XPLA",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
